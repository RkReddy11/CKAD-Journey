Docker Networks:

Docker networks are virtual networks that allow containers to communicate with each other and with external networks.
By default, Docker provides three types of networks: bridge, host, and overlay.
Bridge network: This is the default network created when Docker is installed. Containers connected to the bridge network can communicate with each other using container names as hostnames.
Host network: With the host network, containers share the network namespace with the host system. They can directly access ports on the host system without requiring port mapping.
Overlay network: Overlay networks enable communication between containers running on different Docker hosts or nodes in a swarm cluster.
Connecting and Communicating Containers:

Container-to-Container Communication on the Same Network:

When containers are connected to the same Docker network, they can communicate with each other using their container names as hostnames. Docker provides automatic DNS resolution for containers connected to the same network.
For example, if you have two containers named "container1" and "container2" on the same Docker network, "container1" can communicate with "container2" by using "container2" as the hostname.
Container-to-Container Communication on Different Networks:

If containers are connected to different networks, they cannot communicate directly using container names as hostnames.
However, you can connect containers from different networks by creating a shared network or by using network aliases.
Creating a shared network: You can create a new network and connect containers from different networks to that shared network. This allows them to communicate with each other using their container names as hostnames within the shared network.
Using network aliases: You can assign network aliases to containers to enable communication between containers on different networks. A network alias allows a container to have multiple network identities or hostnames, which can be used for inter-container communication.
Container-to-External Network Communication:

Containers can also communicate with external networks, such as the host network or the internet.
By default, containers are isolated from the host network. To enable communication with the host network, you can use port mapping to expose container ports to the host.
For internet access, you can configure port mapping to expose container ports to the external network.
Docker provides a flexible and scalable networking model that allows containers to connect and communicate with each other as well as with external networks. By leveraging Docker networks, you can easily build and manage interconnected containerized applications.
